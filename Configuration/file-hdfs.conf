# Name the components on this agent
a2.sources = r2
a2.sinks = k2
a2.channels = c2

# Describe/configure the source
# The component type name, needs to be exec
a2.sources.r2.type = exec
# The command to execute
a2.sources.r2.command = tail -F /opt/module/datas/data.log
# A shell invocation used to run the command. e.g. /bin/sh -c. 
# Required only for commands relying on shell features like wildcards, 
# back ticks, pipes etc.
a2.sources.r2.shell = /bin/bash -c

# Describe the sink
# The component type name, needs to be hdfs
a2.sinks.k2.type = hdfs
# HDFS directory path
a2.sinks.k2.hdfs.path = hdfs://hadoop201:9000/flume/%Y%m%d/%H/%M
# Name prefixed to files created by Flume in hdfs directory
a2.sinks.k2.hdfs.filePrefix = logs-
# Should the timestamp be rounded down 
# (if true, affects all time based escape sequences except %t)
a2.sinks.k2.hdfs.round = true
# Rounded down to the highest multiple of this 
# (in the unit configured using hdfs.roundUnit), less than cur
a2.sinks.k2.hdfs.roundValue = 5
# The unit of the round down value - second, minute or hour
a2.sinks.k2.hdfs.roundUnit = minute
# Use the local time (instead of the timestamp from the event header) 
# while replacing the escape sequence
a2.sinks.k2.hdfs.useLocalTimeStamp = true
# number of events written to file before it is flushed to HDFS
a2.sinks.k2.hdfs.batchSize = 100
# Number of seconds to wait before rolling current file 
# (0 = never roll based on time interval)
a2.sinks.k2.hdfs.rollInterval = 10
# Number of events written to file before it rolled 
# (0 = never roll based on number of events)
a2.sinks.k2.hdfs.rollSie = 134217700 # 128MB
# File size to trigger roll, in bytes 
# (0: never roll based on file size)
a2.sinks.k2.hdfs.rollCount = 0
# File format: currently SequenceFile, DataStream or CompressedStream 
# (1)DataStream will not compress output file and please donâ€™t set codeC 
# (2)CompressedStream requires set hdfs.codeC with an available codeC
a2.sinks.k2.hdfs.fileType = DataStream

# Use a channel which buffers events in memory
a2.channels.c2.type = memory
a2.channels.c2.capacity = 10000
a2.channels.c2.transactionCapacity = 1000

# Bind the source and sink to the channel
a2.sources.r2.channels = c2
a2.sinks.k2.channel = c2